{"ast":null,"code":"var _jsxFileName = \"/Users/reyhane/cmdf2025-2/cmd-f2025/front/src/components/CheckIn.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport useInterval from \"../components/hooks/useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckIn({\n  onEndSession\n}) {\n  _s();\n  const [location, setLocation] = useState(null); // User location\n  const [lastCheckInTime, setLastCheckInTime] = useState(null); // Last check-in time\n  const [remainingTime, setRemainingTime] = useState(0); // Remaining time in seconds\n  const [isSessionActive, setIsSessionActive] = useState(true); // Session status\n  const [isCheckingIn, setIsCheckingIn] = useState(false); // Check-in progress status\n  const [checkInAvailable, setCheckInAvailable] = useState(true); // Track if check-in is available\n  const [checkInButtonClicked, setCheckInButtonClicked] = useState(false); // Track if button has been clicked\n  const [locationFetched, setLocationFetched] = useState(false); // Track if location has been fetched\n\n  const checkInFrequency = Number(localStorage.getItem(\"checkInFrequency\")) || 0; // Get check-in frequency from local storage (in minutes)\n\n  // Convert check-in frequency from minutes to seconds\n  const checkInFrequencyInSeconds = checkInFrequency * 60;\n\n  // Get user's location using geolocation API\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLocation(position.coords); // Store location\n      setLastCheckInTime(new Date()); // Record check-in time\n      setLocationFetched(true); // Mark location as fetched\n    }, error => {\n      console.log(\"Geolocation error:\", error); // Handle location error\n    });\n  };\n  const sendEmergencyAlert = () => {\n    console.log(\"Emergency Alert: You missed a check-in!\");\n    // Add logic to send email or SMS here (e.g., integrate an email API)\n  };\n\n  // Automatically attempt check-in (interval setup)\n  useInterval(() => {\n    if (isSessionActive && locationFetched && checkInFrequency > 0 && lastCheckInTime) {\n      const now = new Date();\n      const timeDiff = now - lastCheckInTime; // Time difference in milliseconds\n      const timeLeft = checkInFrequencyInSeconds - Math.floor(timeDiff / 1000); // Time left in seconds\n\n      // If time is up, send an alert and reset check-in time\n      if (timeDiff > checkInFrequencyInSeconds * 1000) {\n        sendEmergencyAlert();\n        setLastCheckInTime(now); // Reset last check-in time after alert\n      }\n\n      // Ensure remainingTime does not go below 0\n      if (timeLeft >= 0) {\n        setRemainingTime(timeLeft); // Update remaining time\n      } else {\n        setRemainingTime(0); // If time left is negative, set it to 0\n      }\n    }\n  }, 1000); // Check every second (1000 ms)\n\n  // Triggered when Start check-in button is clicked\n  const handleCheckIn = () => {\n    setIsCheckingIn(true); // Change to checking in state\n    getLocation(); // Request location\n    setRemainingTime(checkInFrequencyInSeconds); // Set initial remaining time\n    setCheckInButtonClicked(true); // Mark that the button has been clicked\n  };\n\n  // Handle session end\n  const handleEndSession = () => {\n    setIsSessionActive(false); // Change to session inactive state\n    onEndSession(); // Request session end from App.js\n  };\n\n  // Handle reactivation of button when remaining time is 0\n  useEffect(() => {\n    if (remainingTime === 0 && isSessionActive) {\n      // Reactivate the button when remaining time is 0\n      setCheckInAvailable(true); // Make \"Start Check-in\" button available again\n      setIsCheckingIn(false); // Reset checking in state\n    }\n  }, [remainingTime, isSessionActive]);\n\n  // Handle check-in availability timeout (20 seconds window)\n  useEffect(() => {\n    if (checkInButtonClicked) {\n      // Set a timeout for 20 seconds after the check-in button is clicked\n      const timeout = setTimeout(() => {\n        if (!checkInAvailable) {\n          sendEmergencyAlert(); // Send an email alert if button was not pressed in time\n        }\n      }, 20000); // 20 seconds timeout\n\n      return () => clearTimeout(timeout); // Clean up the timeout when the component unmounts or state changes\n    }\n  }, [checkInButtonClicked, checkInAvailable]);\n\n  // Format remaining time as minutes:seconds\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n    return `${minutes}:${sec < 10 ? \"0\" + sec : sec}`; // Ensure two digits for seconds\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"check-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Check-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), isSessionActive && !isCheckingIn ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleCheckIn,\n      disabled: !checkInAvailable,\n      children: checkInAvailable ? \"Start Check-in\" : \"Waiting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Checking in...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), location && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", location.latitude, \", \", location.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Check-in: \", lastCheckInTime === null || lastCheckInTime === void 0 ? void 0 : lastCheckInTime.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Time: \", formatTime(remainingTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isSessionActive && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      onClick: handleEndSession,\n      className: \"mt-3\",\n      children: \"End Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckIn, \"JdnKgqgWXb4funHEXLF/JXbvhgU=\", false, function () {\n  return [useInterval];\n});\n_c = CheckIn;\nexport default CheckIn;\nvar _c;\n$RefreshReg$(_c, \"CheckIn\");","map":{"version":3,"names":["useState","useEffect","Button","useInterval","jsxDEV","_jsxDEV","CheckIn","onEndSession","_s","location","setLocation","lastCheckInTime","setLastCheckInTime","remainingTime","setRemainingTime","isSessionActive","setIsSessionActive","isCheckingIn","setIsCheckingIn","checkInAvailable","setCheckInAvailable","checkInButtonClicked","setCheckInButtonClicked","locationFetched","setLocationFetched","checkInFrequency","Number","localStorage","getItem","checkInFrequencyInSeconds","getLocation","navigator","geolocation","getCurrentPosition","position","coords","Date","error","console","log","sendEmergencyAlert","now","timeDiff","timeLeft","Math","floor","handleCheckIn","handleEndSession","timeout","setTimeout","clearTimeout","formatTime","seconds","minutes","sec","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","latitude","longitude","toLocaleTimeString","variant","_c","$RefreshReg$"],"sources":["/Users/reyhane/cmdf2025-2/cmd-f2025/front/src/components/CheckIn.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport useInterval from \"../components/hooks/useInterval\";\n\nfunction CheckIn({ onEndSession }) {\n  const [location, setLocation] = useState(null); // User location\n  const [lastCheckInTime, setLastCheckInTime] = useState(null); // Last check-in time\n  const [remainingTime, setRemainingTime] = useState(0); // Remaining time in seconds\n  const [isSessionActive, setIsSessionActive] = useState(true); // Session status\n  const [isCheckingIn, setIsCheckingIn] = useState(false); // Check-in progress status\n  const [checkInAvailable, setCheckInAvailable] = useState(true); // Track if check-in is available\n  const [checkInButtonClicked, setCheckInButtonClicked] = useState(false); // Track if button has been clicked\n  const [locationFetched, setLocationFetched] = useState(false); // Track if location has been fetched\n\n  const checkInFrequency =\n    Number(localStorage.getItem(\"checkInFrequency\")) || 0; // Get check-in frequency from local storage (in minutes)\n\n  // Convert check-in frequency from minutes to seconds\n  const checkInFrequencyInSeconds = checkInFrequency * 60;\n\n  // Get user's location using geolocation API\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setLocation(position.coords); // Store location\n        setLastCheckInTime(new Date()); // Record check-in time\n        setLocationFetched(true); // Mark location as fetched\n      },\n      (error) => {\n        console.log(\"Geolocation error:\", error); // Handle location error\n      }\n    );\n  };\n\n  const sendEmergencyAlert = () => {\n    console.log(\"Emergency Alert: You missed a check-in!\");\n    // Add logic to send email or SMS here (e.g., integrate an email API)\n  };\n\n  // Automatically attempt check-in (interval setup)\n  useInterval(() => {\n    if (\n      isSessionActive &&\n      locationFetched &&\n      checkInFrequency > 0 &&\n      lastCheckInTime\n    ) {\n      const now = new Date();\n      const timeDiff = now - lastCheckInTime; // Time difference in milliseconds\n      const timeLeft = checkInFrequencyInSeconds - Math.floor(timeDiff / 1000); // Time left in seconds\n\n      // If time is up, send an alert and reset check-in time\n      if (timeDiff > checkInFrequencyInSeconds * 1000) {\n        sendEmergencyAlert();\n        setLastCheckInTime(now); // Reset last check-in time after alert\n      }\n\n      // Ensure remainingTime does not go below 0\n      if (timeLeft >= 0) {\n        setRemainingTime(timeLeft); // Update remaining time\n      } else {\n        setRemainingTime(0); // If time left is negative, set it to 0\n      }\n    }\n  }, 1000); // Check every second (1000 ms)\n\n  // Triggered when Start check-in button is clicked\n  const handleCheckIn = () => {\n    setIsCheckingIn(true); // Change to checking in state\n    getLocation(); // Request location\n    setRemainingTime(checkInFrequencyInSeconds); // Set initial remaining time\n    setCheckInButtonClicked(true); // Mark that the button has been clicked\n  };\n\n  // Handle session end\n  const handleEndSession = () => {\n    setIsSessionActive(false); // Change to session inactive state\n    onEndSession(); // Request session end from App.js\n  };\n\n  // Handle reactivation of button when remaining time is 0\n  useEffect(() => {\n    if (remainingTime === 0 && isSessionActive) {\n      // Reactivate the button when remaining time is 0\n      setCheckInAvailable(true); // Make \"Start Check-in\" button available again\n      setIsCheckingIn(false); // Reset checking in state\n    }\n  }, [remainingTime, isSessionActive]);\n\n  // Handle check-in availability timeout (20 seconds window)\n  useEffect(() => {\n    if (checkInButtonClicked) {\n      // Set a timeout for 20 seconds after the check-in button is clicked\n      const timeout = setTimeout(() => {\n        if (!checkInAvailable) {\n          sendEmergencyAlert(); // Send an email alert if button was not pressed in time\n        }\n      }, 20000); // 20 seconds timeout\n\n      return () => clearTimeout(timeout); // Clean up the timeout when the component unmounts or state changes\n    }\n  }, [checkInButtonClicked, checkInAvailable]);\n\n  // Format remaining time as minutes:seconds\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n    return `${minutes}:${sec < 10 ? \"0\" + sec : sec}`; // Ensure two digits for seconds\n  };\n\n  return (\n    <div className=\"check-in\">\n      <h3>Check-in</h3>\n\n      {/* Start Check-in button */}\n      {isSessionActive && !isCheckingIn ? (\n        <Button onClick={handleCheckIn} disabled={!checkInAvailable}>\n          {checkInAvailable ? \"Start Check-in\" : \"Waiting...\"}\n        </Button>\n      ) : (\n        <p>Checking in...</p>\n      )}\n\n      {location && (\n        <div>\n          <p>\n            Location: {location.latitude}, {location.longitude}\n          </p>\n          <p>Last Check-in: {lastCheckInTime?.toLocaleTimeString()}</p>\n        </div>\n      )}\n\n      {/* Remaining time display */}\n      <p>Remaining Time: {formatTime(remainingTime)}</p>\n\n      {/* End Session button */}\n      {isSessionActive && (\n        <Button variant=\"danger\" onClick={handleEndSession} className=\"mt-3\">\n          End Session\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default CheckIn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}